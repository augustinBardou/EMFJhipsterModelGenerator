<%@ jet package="org.eclipse.emf.gencode.jhipster.templates.model" class="Validator" imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.emf.gencode.jhipster.ValidatorGeneratorUtil"%>
<%GenClass genClass = (GenClass)argument; GenPackage genPackage = genClass.getGenPackage(); GenModel genModel = genPackage.getGenModel();%>
<%@ include file="../Header.javajetinc"%>
package <%=ValidatorGeneratorUtil.getValidationPackageName(genPackage)%>;

<%genModel.markImportLocation(stringBuffer);%>

/**
 * A sample validator interface for {@link <%=genClass.getQualifiedInterfaceName()%>}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.gencode.jhipster plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface <%=ValidatorGeneratorUtil.getValidatorInterfaceName(genClass)%>
{
	boolean validate();

  <%for (GenFeature genFeature : genClass.getGenFeatures()) {%>
	boolean validate<%=genFeature.getAccessorName()%>(<%=genFeature.getImportedType(null)%> value);
  <%}%>
}
<%genModel.emitSortedImports();%>
